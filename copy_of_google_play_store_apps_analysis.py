# -*- coding: utf-8 -*-
"""Copy of Google Play Store Apps Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HxwuksMaXKZwmTOVnG0GXBE7oy_yfvzI
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('googleplaystore.csv')

type(df)

df.head()

df.tail()

df.shape

df.describe()

df.boxplot()

df.hist();

"""#**Data Cleaning**"""

df.info()

df.isnull()

df.isnull().sum()

"""#**Checking how many outliers are there**"""

df[df.Rating>5]

df.drop([10472],inplace=True)

df[10470:10475]

df.boxplot()

df.hist()

"""#**Remove column that are 90% empty**"""

threshold = len(df) *0.1
 threshold

df.dropna(thresh = threshold,axis=1,inplace=True)

print(df.isnull().sum())

"""#**Data Manipulation**"""

def impute_median(series):
  return series.fillna(series.median)

df.Rating = df['Rating'].transform(impute_median)

df.isnull().sum()

print(df['Type'].mode())
print(df['Current Ver'].mode())
print(df['Android Ver'].mode())

df['Type'].fillna(str(df['Type'].mode().values[0]),inplace=True)
df['Current Ver'].fillna(str(df['Current Ver'].mode().values[0]),inplace=True)
df['Android Ver'].fillna(str(df['Android Ver'].mode().values*[0]),inplace=True)

df.isnull().sum()

df['Price'] = df['Price'].apply((lambda x: str(x).replace('$', '')if '$' in str(x) else str(x)))
df['Price'] = df['Price'].apply(lambda x : float(x))
df['Reviews'] = pd.to_numeric(df['Reviews'],errors = 'coerce')

df['Installs'] = df['Installs'].apply(lambda x : str(x).replace('+','')if '+' in str(x) else str(x))
df['Installs'] = df['Installs'].apply(lambda x : str(x).replace(',','')if ',' in str(x) else str(x))
df['Installs'] = df['Installs'].apply(lambda x: float(x))

df.head(10)

df.describe()

"""#**Data visulization**"""

grp = df.groupby('Category')
x = grp['Installs'].agg(np.mean)
y = grp['Price'].agg(np.sum)
z = grp['Reviews'].agg(np.mean)
print(x)
print(y)
print(z)

plt.figure(figsize=(16,5))
plt.plot(x ,  color='b')
plt.xticks(rotation=90)
plt.title('Category Vs Installs')
plt.xlabel('Category -------->')
plt.ylabel('Installs -------->')
plt.show()

plt.figure(figsize=(16,5))
plt.plot(y , 'r--' , color='r')
plt.xticks(rotation=90)
plt.title('Category Vs Pricing')
plt.xlabel('Category -------->')
plt.ylabel('Pricing -------->')
plt.show()

plt.figure(figsize=(16,5))
plt.plot(x , 'g^' , color='g')
plt.xticks(rotation=90)
plt.title('Category Vs Reviews')
plt.xlabel('Category -------->')
plt.ylabel('Reviews -------->')
plt.show()